// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
import React, { useState } from 'react';
import { Link, useLocation, useNavigate } from 'react-router-dom';
import './Header.css';

const Header = ({ toggleTheme, isDarkTheme }) => {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const location = useLocation();
  const navigate = useNavigate();

  // –≠–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  const navItems = [
    { path: '/chat', label: '–ß–∞—Ç', icon: 'üí¨' },
    { path: '/timeline', label: '–¢–∞–π–º–ª–∞–π–Ω', icon: '‚è≥' },
    { path: '/articles', label: '–°—Ç–∞—Ç—å–∏', icon: 'üìù' },
    { path: '/biographies', label: '–ë–∏–æ–≥—Ä–∞—Ñ–∏–∏', icon: 'üë§' },
    { path: '/popular', label: '–ü–æ–ø—É–ª—è—Ä–Ω–æ–µ', icon: 'üî•' },
  ];

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞
  const handleLogout = () => {
    localStorage.removeItem('token');
    navigate('/login');
    setIsMobileMenuOpen(false);
  };

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
  const toggleMobileMenu = () => {
    setIsMobileMenuOpen(!isMobileMenuOpen);
  };

  return (
    <header className="header">
      <div className="header-content">
        {/* –õ–æ–≥–æ—Ç–∏–ø —Å –ø–µ—Ä–µ—Ö–æ–¥–æ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é */}
        <Link to="/" className="header-logo">
          AI History
        </Link>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ */}
        <nav className="header-nav">
          {navItems.map((item) => (
            <Link
              key={item.path}
              to={item.path}
              className={`nav-link ${location.pathname === item.path ? 'active' : ''}`}
            >
              <span className="nav-icon">{item.icon}</span>
              {item.label}
            </Link>
          ))}
        </nav>

        {/* –î–µ–π—Å—Ç–≤–∏—è –≤ —à–∞–ø–∫–µ */}
        <div className="header-actions">
          <button
            className="theme-toggle"
            onClick={toggleTheme}
            aria-label={isDarkTheme ? '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Å–≤–µ—Ç–ª—É—é —Ç–µ–º—É' : '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Ç—ë–º–Ω—É—é —Ç–µ–º—É'}
          >
            {isDarkTheme ? '‚òÄÔ∏è' : 'üåô'}
          </button>
          <button className="btn btn-secondary logout-button" onClick={handleLogout}>
            –í—ã–π—Ç–∏
          </button>
          <button
            className="mobile-menu-button"
            onClick={toggleMobileMenu}
            aria-label={isMobileMenuOpen ? '–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é' : '–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é'}
          >
            <span className="menu-icon"></span>
          </button>
        </div>
      </div>

      {/* –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é */}
      <div className={`mobile-menu ${isMobileMenuOpen ? 'active' : ''}`}>
        <div className="mobile-menu-header">
          <h2>–ú–µ–Ω—é</h2>
          <button
            className="mobile-menu-close"
            onClick={toggleMobileMenu}
            aria-label="–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é"
          >
            ‚úï
          </button>
        </div>
        <nav className="mobile-nav">
          {navItems.map((item) => (
            <Link
              key={item.path}
              to={item.path}
              className={`mobile-nav-link ${location.pathname === item.path ? 'active' : ''}`}
              onClick={toggleMobileMenu}
            >
              <span className="nav-icon">{item.icon}</span>
              {item.label}
            </Link>
          ))}
          <button className="mobile-nav-link logout-button" onClick={handleLogout}>
            üö™ –í—ã–π—Ç–∏
          </button>
        </nav>
      </div>
    </header>
  );
};

export default Header;